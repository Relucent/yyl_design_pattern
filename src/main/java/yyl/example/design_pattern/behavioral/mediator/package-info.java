/**
 * 中介者(Mediator)模式是用来降低多个对象和类之间的通信复杂性。这种模式提供了一个中介类，该类通常处理不同类之间的通信，并支持松耦合，使代码易于维护。
 */
package yyl.example.design_pattern.behavioral.mediator;

// 主要角色
// 中介者(Mediator)：用于各个同事类之间的通信，从一个同事类接收消息，然后通过消息影响其他同时类。
// 同事类(Colleague)：如果一个对象会影响其他的对象，同时也会被其他对象影响，那么这两个对象称为同事类。在实际应用中，同事类一般由多个组成，他们之间相互影响，相互依赖。在中介者模式中，同事类之间必须通过中介者才能进行消息传递。
