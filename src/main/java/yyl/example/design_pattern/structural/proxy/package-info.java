/**
 * 代理(Proxy)模式的作用：为其他对象提供一种代理以控制对这个对象的访问。 <br>
 * 在某些情况下，一个对象不适合或者不能直接引用另一个对象，而代理对象可以在客户端和目标对象之间起到中介的作用。<br>
 * 
 * 和其他模式区别：<br>
 * 和适配器模式的区别：适配器模式主要改变所考虑对象的接口，而代理模式不能改变所代理类的接口。 <br>
 * 和装饰器模式的区别：装饰器模式为了增强功能，而代理模式是为了加以控制。 <br>
 */
package yyl.example.design_pattern.structural.proxy;